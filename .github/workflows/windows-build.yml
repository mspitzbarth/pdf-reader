name: Build Windows EXE

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-windows-exe:
    runs-on: windows-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.7"

      # Cache dependencies to speed up builds
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.virtualenvs
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}

      # Install dependencies from requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller pyinstaller-hooks-contrib

      # Check Python file for syntax errors
      - name: Check Python file for syntax errors
        run: python -m py_compile main.py

      # Build EXE with PyInstaller
      - name: Build EXE with PyInstaller
        shell: pwsh
        run: |
          pyinstaller --onefile --debug all --name PDFReader `
            --additional-hooks-dir pyinstaller-hooks `
            --collect-all pandas `
            --collect-all numpy `
            --collect-all pdfplumber `
            --collect-all tkinterdnd2 `
            --hidden-import pandas._libs.tslibs.nattype `
            --hidden-import pandas._libs.tslibs.np_datetime `
            --hidden-import pandas._libs.tslibs.timestamps `
            --hidden-import openpyxl.styles `
            --hidden-import openpyxl.formatting.rule `
            --hidden-import tkinter.ttk `
            --hidden-import tkinter `
            main.py

      # Verify EXE exists
      - name: Verify EXE exists
        shell: pwsh
        run: |
          if (!(Test-Path "dist\\PDFReader.exe")) {
            Write-Error "EXE not found. Build may have failed."
            exit 1
          }

      # Run the EXE and check for errors
      - name: Run the EXE and check for errors
        shell: pwsh
        run: |
          try {
            & dist\PDFReader.exe *> output.log
            Write-Output "EXE ran successfully. Output:"
            Get-Content output.log
          } catch {
            Write-Error "The EXE failed to run. Output:"
            Get-Content output.log
            exit 1
          }

      # Upload the built EXE as an artifact
      - name: Upload built EXE
        uses: actions/upload-artifact@v4
        with:
          name: pdf-reader-exe
          path: dist/PDFReader.exe

      # Clean up build artifacts to keep the repository clean
      - name: Clean up build artifacts
        shell: pwsh
        run: |
          Remove-Item -Recurse -Force build, dist, __pycache__, PDFReader.spec
