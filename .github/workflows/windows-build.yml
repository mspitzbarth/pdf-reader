name: Build Windows EXE

on:
  # Trigger the workflow on push to main or manual dispatch
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-windows-exe:
    runs-on: windows-latest # Use the latest Windows runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Fetch your repository content

      - name: Set up Python
        uses: actions/setup-python@v4 # Install a specific version of Python
        with:
          python-version: "3.7"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy pdfplumber openpyxl tkinterdnd2
          pip install pyinstaller pyinstaller-hooks-contrib

      - name: Check import_test.py for missing dependencies
        shell: pwsh
        run: |
          # Check for missing dependencies in import_test.py
          $missing = python ./tests/import_test.py
          if ($missing) {
            Write-Error "Missing dependencies: $missing"
            exit 1
          } else {
            Write-Output "All dependencies are present."
          }

      - name: Check Python file for syntax errors
        run: python -m py_compile main.py # Quickly catch any syntax issues before building

      - name: Build EXE with PyInstaller
        shell: pwsh
        run: |
          # Build the EXE using PyInstaller
          # --noconsole: no terminal window when running the app
          # --onefile: single executable
          # --name: output EXE filename
          # --collect-all: include all relevant data and binaries for these packages
          # --hidden-import: ensure hidden dependencies are bundled
          pyinstaller --noconsole --onefile --name PDFReader `
            --collect-submodules pandas `
            --collect-submodules numpy `
            --collect-all pdfplumber `
            --collect-all tkinterdnd2 `
            --hidden-import openpyxl.styles `
            --hidden-import openpyxl.formatting.rule `
            --hidden-import tkinter.ttk `
            --hidden-import tkinter `
            main.py

      - name: Verify EXE exists
        shell: pwsh
        run: |
          # Ensure the EXE was successfully created
          if (!(Test-Path "dist\\PDFReader.exe")) {
            Write-Error "EXE not found. Build may have failed."
            exit 1
          }

      - name: Run the EXE and check for errors
        shell: pwsh
        run: |
          try {
            # Run the EXE silently and capture its output
            & dist\PDFReader.exe *> output.log
            Write-Output "EXE ran successfully. Output:"
            Get-Content output.log
          } catch {
            # Output errors if it fails to run
            Write-Error "The EXE failed to run. Output:"
            Get-Content output.log
            exit 1
          }

      - name: Upload built EXE
        uses: actions/upload-artifact@v4
        with:
          # Save the EXE as a downloadable artifact in the GitHub Actions UI
          name: pdf-reader-exe
          path: dist/PDFReader.exe

      - name: Clean up build artifacts
        shell: pwsh
        run: |
          # Remove build leftovers to keep workspace clean
          Remove-Item -Recurse -Force build, dist, __pycache__, PDFReader.spec
