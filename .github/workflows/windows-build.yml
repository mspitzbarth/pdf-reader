name: Build and Release Windows EXE

on:
  push:
    branches:
      - main # Trigger the workflow when pushing to the main branch
    tags:
      - "v*" # Trigger only on version tags like v1.0.0
  workflow_dispatch:

jobs:
  main:
    name: Build, Test, and Prepare EXE
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint and Syntax Check
        run: python -m py_compile main.py

      - name: Build EXE with PyInstaller
        shell: pwsh
        run: |
          pyinstaller --noconsole --onefile --name PDFReader `
            --collect-submodules pandas `
            --collect-submodules numpy `
            --collect-all pdfplumber `
            --collect-all tkinterdnd2 `
            --hidden-import openpyxl.styles `
            --hidden-import openpyxl.formatting.rule `
            --hidden-import tkinter.ttk `
            --hidden-import tkinter `
            main.py

      - name: Verify EXE exists
        shell: pwsh
        run: |
          if (!(Test-Path "dist\\PDFReader.exe")) {
            Write-Error "EXE not found."
            exit 1
          }

      - name: Upload built EXE as artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdf-reader-exe
          path: dist/PDFReader.exe

      - name: Launch EXE and Monitor
        shell: pwsh
        run: |
          try {
            $proc = Start-Process -FilePath "dist\\PDFReader.exe" -PassThru
            Start-Sleep -Seconds 5
            if ($proc.HasExited) {
              Write-Error "EXE exited early with code $($proc.ExitCode)"
              exit $proc.ExitCode
            } else {
              Stop-Process -Id $proc.Id
              Write-Output "EXE launched and stayed alive for 5 seconds."
            }
          } catch {
            Write-Error "EXE failed to launch"
            exit 1
          }

  release:
    name: Publish to GitHub Releases
    if: startsWith(github.ref, 'refs/tags/v') # Only run this job for tags
    needs: main # Ensure this runs only after the 'main' job is successful
    runs-on: ubuntu-latest
    steps:
      - name: Download built EXE artifact
        uses: actions/download-artifact@v4
        with:
          name: pdf-reader-exe
          path: ./release

      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          name: PDFReader ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: ./release/PDFReader.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
